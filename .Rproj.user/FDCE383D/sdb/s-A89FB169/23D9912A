{
    "collab_server" : "",
    "contents" : "#'Report the accumulative numbers of a rank of a given taxa overtime\n#'\n#' @param taxa A string.\n#' @param rank A string.\n#' @return table of accnumative numbers of \\code{rank} of a \\code{taxa}\n#' @examples\n#' taxaaccum(\"Animalia\", \"Phyla\")\n\ntaxaaccum <- function(taxa, rank) {\n  df <- subset(data_m, Kingdoms == taxa | Phyla == taxa | Classes == taxa |                 Orders == taxa | Families == taxa | Genera == taxa)\n  dt = as.data.table(unique(df))\n  setkey(dt, \"year\")\n  if (rank == \"Phylum\") {\n    dt[, id := as.numeric(factor(Phyla, levels = unique(Phyla)))]\n    ranklabel = \"phyla\"\n  } else if (rank == \"Class\") {\n    dt[, id := as.numeric(factor(Classes, levels = unique(Classes)))]\n    ranklabel = \"classes\"\n  } else if (rank == \"Order\") {\n    dt[, id := as.numeric(factor(Orders, levels = unique(Orders)))]\n    ranklabel = \"orders\"\n  } else if (rank == \"Family\") {\n    dt[, id := as.numeric(factor(Families, levels = unique(Families)))]\n    ranklabel = \"families\"\n  } else if (rank == \"Genus\") {\n    dt[, id := as.numeric(factor(Genera, levels = unique(Genera)))]\n    ranklabel = \"genera\"\n  } else if (rank == \"Species\") {\n    dt[, id := as.numeric(factor(AphiaIDs, levels = unique(AphiaIDs)))]\n    ranklabel = \"species\"\n  }\n  setkey(dt, \"year\", \"id\")\n  dt.out <- dt[J(unique(year)), mult = \"last\"]#[, Phylum := NULL]\n  dt.out[, id := cummax(id)]\n  numtaxa <- cummax(as.numeric(factor(dt$id)))\n  taxa_dt <- aggregate(numtaxa, list(year = dt$year), max )\n  colnames(taxa_dt) <- c(\"year\", \"taxa count\")\n  plot(taxa_dt$year, taxa_dt$`taxa count`, xlab = \"Year\", ylab = paste(\"Number of\", ranklabel, sep = \" \"))\n  title(taxa)\n}\n",
    "created" : 1504612346034.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "1804892791",
    "id" : "23D9912A",
    "lastKnownWriteTime" : 1504612965,
    "last_content_update" : 1504612965865,
    "path" : "~/Documents/R packages/biotaxa/R/taxaaccum.R",
    "project_path" : "R/taxaaccum.R",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "relative_order" : 2,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}