taxamodel_cor
getwd()
cd ..
devtools::document()
devtools::build()
library(biotaxa)
taxamodel_cor
taxamodel
taxamodel_FIXPLOT
taxamodel()
taxamodel
devtools::document()
devtools::check()
devtools::install()
taxamodel_cor
taxamodel_corr
taxamodel_corr("Animalia", "Genus", "Asymptopic_Regression_Model")
taxamodel_corr("Animalia", "Genus", "Asymtopic_Regression_Model")
taxamodel_corr("Animalia", "Genus", "logistic")
library(biotaxa)
rm(list = ls())
library(biotaxa)
taxamodel_corr("Animalia", "Genus", "Asymtopic_Regression_Model")
taxamodel_corr("Animalia", "Genus", "logistic")
devtools::document()
shiny::runApp('biotaxa-app')
runApp('biotaxa-app')
runApp('biotaxa-app')
runApp('biotaxa-app')
runApp('biotaxa-app')
runApp('biotaxa-app')
runApp('biotaxa-app')
runApp('biotaxa-app')
runApp('biotaxa-app')
runApp('biotaxa-app')
runApp('biotaxa-app')
runApp('biotaxa-app')
runApp('biotaxa-app')
runApp('biotaxa-app')
library(biotaxa)
shiny::runApp('biotaxa-app')
runApp('biotaxa-app')
library(biotaxa)
taxaaccum("Chromista", "Genus")
spetaxalist(data_m)
library(biotaxa)
spetaxalist(data_m)
?spetaxalist
spetaxalist(data_m, Phylum)
spetaxalist(data_m, Phyla)
taxalist(data_m, rank)
alltaxalist(data_m =data_m)
frequencyrank("Animalia", "Genus")
frequencyrank("Animalia", "Genus")
taxaprecision("Animalia", "Genus")
taxaprecision("Animalia")
taxaprecision("Genus")
taxaprecision("Chiridota")
OBIS_imprecision("Chiridota")
OBIS_imprecisionrate("Chiridota")
shiny::runApp('biotaxa-app')
taxaaccum("Animalia", "Genus")
runApp('biotaxa-app')
runApp('biotaxa-app')
runApp('biotaxa-app')
runApp('biotaxa-app')
taxaaccum("Animalia", "Genus")
runApp('biotaxa-app')
taxaaccum("Animalia", "Genus")
taxaaccum <- function(taxa, rank) {
df <- subset(data_m, Kingdoms == taxa | Phyla == taxa | Classes == taxa | Orders == taxa | Families == taxa | Genera == taxa)
dt = as.data.table(unique(df))
setkey(dt, "year")
if (rank == "Phylum") {
dt[, id := as.numeric(factor(Phyla, levels = unique(Phyla)))]
ranklabel = "phyla"
} else if (rank == "Class") {
dt[, id := as.numeric(factor(Classes, levels = unique(Classes)))]
ranklabel = "classes"
} else if (rank == "Order") {
dt[, id := as.numeric(factor(Orders, levels = unique(Orders)))]
ranklabel = "orders"
} else if (rank == "Family") {
dt[, id := as.numeric(factor(Families, levels = unique(Families)))]
ranklabel = "families"
} else if (rank == "Genus") {
dt[, id := as.numeric(factor(Genera, levels = unique(Genera)))]
ranklabel = "genera"
} else if (rank == "Species") {
dt[, id := as.numeric(factor(AphiaIDs, levels = unique(AphiaIDs)))]
ranklabel = "species"
}
setkey(dt, "year", "id")
dt.out <- dt[J(unique(year)), mult = "last"]#[, Phylum := NULL]
dt.out[, id := cummax(id)]
numtaxa <- cummax(as.numeric(factor(dt$id)))
taxa_dt <- aggregate(numtaxa, list(year = dt$year), max )
colnames(taxa_dt) <- c("year", "taxacount")
minx <- min(as.vector(taxa_dt$year))
maxx <- max(as.vector(taxa_dt$year))
ylab = paste("Number of", ranklabel, sep = " ")
#p <- ggplot(taxa_dt, aes(x = year, y = taxacount, colour = "#FF9999")) + geom_point(colour = "cornflowerblue")
#p <- p + labs(x = "Year", y = ylab) + ggtitle(taxa) + scale_x_discrete(breaks = c(seq(minx, maxx, 25))) + theme(legend.position = "none", axis.text.x = element_text(angle = 60, hjust = 1), axis.text.y = element_text(angle = 60, hjust = 1), axis.title.y = element_text(margin = margin(t = 0, r = 20, b = 0, l = 0)))
p <- ggplot(taxa_dt, aes(x = year, y = taxacount, colour = "#FF9999"
, group = 1)) + geom_point(colour = "cornflowerblue")  + theme(plot.title = element_text(family = "Helvetica", face = "bold", size = (32)), legend.position = "right", axis.text.x = element_text(angle = 60, hjust = 1, size = 22), axis.text.y = element_text(angle = 60, hjust = 1, size = 22), axis.title.y = element_text(margin = margin(t = 0, r = 20, b = 0, l = 0), size = 26), axis.title.x = element_text(size = 26))
p <- p +  labs(title = plt_title, x = "Year", y = ylab)
p
}
taxaaccum("Animalia", "Genus")
taxaaccum <- function(taxa, rank) {
df <- subset(data_m, Kingdoms == taxa | Phyla == taxa | Classes == taxa | Orders == taxa | Families == taxa | Genera == taxa)
dt = as.data.table(unique(df))
setkey(dt, "year")
if (rank == "Phylum") {
dt[, id := as.numeric(factor(Phyla, levels = unique(Phyla)))]
ranklabel = "phyla"
} else if (rank == "Class") {
dt[, id := as.numeric(factor(Classes, levels = unique(Classes)))]
ranklabel = "classes"
} else if (rank == "Order") {
dt[, id := as.numeric(factor(Orders, levels = unique(Orders)))]
ranklabel = "orders"
} else if (rank == "Family") {
dt[, id := as.numeric(factor(Families, levels = unique(Families)))]
ranklabel = "families"
} else if (rank == "Genus") {
dt[, id := as.numeric(factor(Genera, levels = unique(Genera)))]
ranklabel = "genera"
} else if (rank == "Species") {
dt[, id := as.numeric(factor(AphiaIDs, levels = unique(AphiaIDs)))]
ranklabel = "species"
}
setkey(dt, "year", "id")
dt.out <- dt[J(unique(year)), mult = "last"]#[, Phylum := NULL]
dt.out[, id := cummax(id)]
numtaxa <- cummax(as.numeric(factor(dt$id)))
taxa_dt <- aggregate(numtaxa, list(year = dt$year), max )
colnames(taxa_dt) <- c("year", "taxacount")
minx <- min(as.vector(taxa_dt$year))
maxx <- max(as.vector(taxa_dt$year))
ylab = paste("Number of", ranklabel, sep = " ")
#p <- ggplot(taxa_dt, aes(x = year, y = taxacount, colour = "#FF9999")) + geom_point(colour = "cornflowerblue")
#p <- p + labs(x = "Year", y = ylab) + ggtitle(taxa) + scale_x_discrete(breaks = c(seq(minx, maxx, 25))) + theme(legend.position = "none", axis.text.x = element_text(angle = 60, hjust = 1), axis.text.y = element_text(angle = 60, hjust = 1), axis.title.y = element_text(margin = margin(t = 0, r = 20, b = 0, l = 0)))
p <- ggplot(taxa_dt, aes(x = year, y = taxacount, colour = "#FF9999"
, group = 1)) + geom_point(colour = "cornflowerblue")  + theme(plot.title = element_text(family = "Helvetica", face = "bold", size = (32)), legend.position = "right", axis.text.x = element_text(angle = 60, hjust = 1, size = 22), axis.text.y = element_text(angle = 60, hjust = 1, size = 22), axis.title.y = element_text(margin = margin(t = 0, r = 20, b = 0, l = 0), size = 26), axis.title.x = element_text(size = 26))
p <- p +  labs(title = taxa, x = "Year", y = ylab)
p
}
taxaaccum("Animalia", "Genus")
taxaaccum <- function(taxa, rank) {
df <- subset(data_m, Kingdoms == taxa | Phyla == taxa | Classes == taxa | Orders == taxa | Families == taxa | Genera == taxa)
dt = as.data.table(unique(df))
setkey(dt, "year")
if (rank == "Phylum") {
dt[, id := as.numeric(factor(Phyla, levels = unique(Phyla)))]
ranklabel = "phyla"
} else if (rank == "Class") {
dt[, id := as.numeric(factor(Classes, levels = unique(Classes)))]
ranklabel = "classes"
} else if (rank == "Order") {
dt[, id := as.numeric(factor(Orders, levels = unique(Orders)))]
ranklabel = "orders"
} else if (rank == "Family") {
dt[, id := as.numeric(factor(Families, levels = unique(Families)))]
ranklabel = "families"
} else if (rank == "Genus") {
dt[, id := as.numeric(factor(Genera, levels = unique(Genera)))]
ranklabel = "genera"
} else if (rank == "Species") {
dt[, id := as.numeric(factor(AphiaIDs, levels = unique(AphiaIDs)))]
ranklabel = "species"
}
setkey(dt, "year", "id")
dt.out <- dt[J(unique(year)), mult = "last"]#[, Phylum := NULL]
dt.out[, id := cummax(id)]
numtaxa <- cummax(as.numeric(factor(dt$id)))
taxa_dt <- aggregate(numtaxa, list(year = dt$year), max )
colnames(taxa_dt) <- c("year", "taxacount")
minx <- min(as.vector(taxa_dt$year))
maxx <- max(as.vector(taxa_dt$year))
ylab = paste("Number of", ranklabel, sep = " ")
#p <- ggplot(taxa_dt, aes(x = year, y = taxacount, colour = "#FF9999")) + geom_point(colour = "cornflowerblue")
#p <- p + labs(x = "Year", y = ylab) + ggtitle(taxa) + scale_x_discrete(breaks = c(seq(minx, maxx, 25))) + theme(legend.position = "none", axis.text.x = element_text(angle = 60, hjust = 1), axis.text.y = element_text(angle = 60, hjust = 1), axis.title.y = element_text(margin = margin(t = 0, r = 20, b = 0, l = 0)))
p <- ggplot(taxa_dt, aes(x = year, y = taxacount, colour = "#FF9999"
, group = 1)) + geom_point(colour = "cornflowerblue")  + theme(plot.title = element_text(family = "Helvetica", face = "bold", size = (22)), legend.position = "right", axis.text.x = element_text(angle = 60, hjust = 1, size = 12), axis.text.y = element_text(angle = 60, hjust = 1, size = 12), axis.title.y = element_text(margin = margin(t = 0, r = 20, b = 0, l = 0), size = 16), axis.title.x = element_text(size = 16))
p <- p +  labs(title = taxa, x = "Year", y = ylab)
p
}
taxaaccum("Animalia", "Genus")
taxaaccum <- function(taxa, rank) {
df <- subset(data_m, Kingdoms == taxa | Phyla == taxa | Classes == taxa | Orders == taxa | Families == taxa | Genera == taxa)
dt = as.data.table(unique(df))
setkey(dt, "year")
if (rank == "Phylum") {
dt[, id := as.numeric(factor(Phyla, levels = unique(Phyla)))]
ranklabel = "phyla"
} else if (rank == "Class") {
dt[, id := as.numeric(factor(Classes, levels = unique(Classes)))]
ranklabel = "classes"
} else if (rank == "Order") {
dt[, id := as.numeric(factor(Orders, levels = unique(Orders)))]
ranklabel = "orders"
} else if (rank == "Family") {
dt[, id := as.numeric(factor(Families, levels = unique(Families)))]
ranklabel = "families"
} else if (rank == "Genus") {
dt[, id := as.numeric(factor(Genera, levels = unique(Genera)))]
ranklabel = "genera"
} else if (rank == "Species") {
dt[, id := as.numeric(factor(AphiaIDs, levels = unique(AphiaIDs)))]
ranklabel = "species"
}
setkey(dt, "year", "id")
dt.out <- dt[J(unique(year)), mult = "last"]#[, Phylum := NULL]
dt.out[, id := cummax(id)]
numtaxa <- cummax(as.numeric(factor(dt$id)))
taxa_dt <- aggregate(numtaxa, list(year = dt$year), max )
colnames(taxa_dt) <- c("year", "taxacount")
minx <- min(as.vector(taxa_dt$year))
maxx <- max(as.vector(taxa_dt$year))
ylab = paste("Number of", ranklabel, sep = " ")
#p <- ggplot(taxa_dt, aes(x = year, y = taxacount, colour = "#FF9999")) + geom_point(colour = "cornflowerblue")
#p <- p + labs(x = "Year", y = ylab) + ggtitle(taxa) + scale_x_discrete(breaks = c(seq(minx, maxx, 25))) + theme(legend.position = "none", axis.text.x = element_text(angle = 60, hjust = 1), axis.text.y = element_text(angle = 60, hjust = 1), axis.title.y = element_text(margin = margin(t = 0, r = 20, b = 0, l = 0)))
p <- ggplot(taxa_dt, aes(x = year, y = taxacount, colour = "#FF9999"
, group = 1)) + geom_point(colour = "cornflowerblue")  + theme(plot.title = element_text(family = "Helvetica", face = "bold", size = (22)), legend.position = "right", axis.text.x = element_text(angle = 60, hjust = 1, size = 12), axis.text.y = element_text(angle = 60, hjust = 1, size = 8), axis.title.y = element_text(margin = margin(t = 0, r = 20, b = 0, l = 0), size = 16), axis.title.x = element_text(size = 16))
p <- p +  labs(title = taxa, x = "Year", y = ylab)
p
}
taxaaccum("Animalia", "Genus")
taxaaccum <- function(taxa, rank) {
df <- subset(data_m, Kingdoms == taxa | Phyla == taxa | Classes == taxa | Orders == taxa | Families == taxa | Genera == taxa)
dt = as.data.table(unique(df))
setkey(dt, "year")
if (rank == "Phylum") {
dt[, id := as.numeric(factor(Phyla, levels = unique(Phyla)))]
ranklabel = "phyla"
} else if (rank == "Class") {
dt[, id := as.numeric(factor(Classes, levels = unique(Classes)))]
ranklabel = "classes"
} else if (rank == "Order") {
dt[, id := as.numeric(factor(Orders, levels = unique(Orders)))]
ranklabel = "orders"
} else if (rank == "Family") {
dt[, id := as.numeric(factor(Families, levels = unique(Families)))]
ranklabel = "families"
} else if (rank == "Genus") {
dt[, id := as.numeric(factor(Genera, levels = unique(Genera)))]
ranklabel = "genera"
} else if (rank == "Species") {
dt[, id := as.numeric(factor(AphiaIDs, levels = unique(AphiaIDs)))]
ranklabel = "species"
}
setkey(dt, "year", "id")
dt.out <- dt[J(unique(year)), mult = "last"]#[, Phylum := NULL]
dt.out[, id := cummax(id)]
numtaxa <- cummax(as.numeric(factor(dt$id)))
taxa_dt <- aggregate(numtaxa, list(year = dt$year), max )
colnames(taxa_dt) <- c("year", "taxacount")
minx <- min(as.vector(taxa_dt$year))
maxx <- max(as.vector(taxa_dt$year))
ylab = paste("Number of", ranklabel, sep = " ")
#p <- ggplot(taxa_dt, aes(x = year, y = taxacount, colour = "#FF9999")) + geom_point(colour = "cornflowerblue")
#p <- p + labs(x = "Year", y = ylab) + ggtitle(taxa) + scale_x_discrete(breaks = c(seq(minx, maxx, 25))) + theme(legend.position = "none", axis.text.x = element_text(angle = 60, hjust = 1), axis.text.y = element_text(angle = 60, hjust = 1), axis.title.y = element_text(margin = margin(t = 0, r = 20, b = 0, l = 0)))
p <- ggplot(taxa_dt, aes(x = year, y = taxacount, colour = "#FF9999"
, group = 1)) + geom_point(colour = "cornflowerblue")  + theme(plot.title = element_text(family = "Helvetica", face = "bold", size = (22)), legend.position = "right", axis.text.x = element_text(angle = 60, hjust = 1, size = 8), axis.text.y = element_text(angle = 60, hjust = 1, size = 8), axis.title.y = element_text(margin = margin(t = 0, r = 20, b = 0, l = 0), size = 16), axis.title.x = element_text(size = 16))
p <- p +  labs(title = taxa, x = "Year", y = ylab)
p
}
taxaaccum("Animalia", "Genus")
#p <- ggplot(taxa_dt, aes(x = year, y = taxacount, colour = "#FF9999")) + geom_point(colour = "cornflowerblue")
#p <- p + labs(x = "Year", y = ylab) + ggtitle(taxa) + scale_x_discrete(breaks = c(seq(minx, maxx, 25))) + theme(legend.position = "none", axis.text.x = element_text(angle = 60, hjust = 1), axis.text.y = element_text(angle = 60, hjust = 1), axis.title.y = element_text(margin = margin(t = 0, r = 20, b = 0, l = 0)))
p <- ggplot(taxa_dt, aes(x = year, y = taxacount, colour = "#FF9999"
, group = 1)) + geom_point(colour = "cornflowerblue")  + theme(plot.title = element_text(family = "Helvetica", face = "bold", size = (22)), legend.position = "right", axis.text.x = element_text(angle = 60, hjust = 1), axis.text.y = element_text(angle = 60, hjust = 1, size = 8), axis.title.y = element_text(margin = margin(t = 0, r = 20, b = 0, l = 0), size = 16), axis.title.x = element_text(size = 16))
taxaaccum <- function(taxa, rank) {
df <- subset(data_m, Kingdoms == taxa | Phyla == taxa | Classes == taxa | Orders == taxa | Families == taxa | Genera == taxa)
dt = as.data.table(unique(df))
setkey(dt, "year")
if (rank == "Phylum") {
dt[, id := as.numeric(factor(Phyla, levels = unique(Phyla)))]
ranklabel = "phyla"
} else if (rank == "Class") {
dt[, id := as.numeric(factor(Classes, levels = unique(Classes)))]
ranklabel = "classes"
} else if (rank == "Order") {
dt[, id := as.numeric(factor(Orders, levels = unique(Orders)))]
ranklabel = "orders"
} else if (rank == "Family") {
dt[, id := as.numeric(factor(Families, levels = unique(Families)))]
ranklabel = "families"
} else if (rank == "Genus") {
dt[, id := as.numeric(factor(Genera, levels = unique(Genera)))]
ranklabel = "genera"
} else if (rank == "Species") {
dt[, id := as.numeric(factor(AphiaIDs, levels = unique(AphiaIDs)))]
ranklabel = "species"
}
setkey(dt, "year", "id")
dt.out <- dt[J(unique(year)), mult = "last"]#[, Phylum := NULL]
dt.out[, id := cummax(id)]
numtaxa <- cummax(as.numeric(factor(dt$id)))
taxa_dt <- aggregate(numtaxa, list(year = dt$year), max )
colnames(taxa_dt) <- c("year", "taxacount")
minx <- min(as.vector(taxa_dt$year))
maxx <- max(as.vector(taxa_dt$year))
ylab = paste("Number of", ranklabel, sep = " ")
#p <- ggplot(taxa_dt, aes(x = year, y = taxacount, colour = "#FF9999")) + geom_point(colour = "cornflowerblue")
#p <- p + labs(x = "Year", y = ylab) + ggtitle(taxa) + scale_x_discrete(breaks = c(seq(minx, maxx, 25))) + theme(legend.position = "none", axis.text.x = element_text(angle = 60, hjust = 1), axis.text.y = element_text(angle = 60, hjust = 1), axis.title.y = element_text(margin = margin(t = 0, r = 20, b = 0, l = 0)))
p <- ggplot(taxa_dt, aes(x = year, y = taxacount, colour = "#FF9999"
, group = 1)) + geom_point(colour = "cornflowerblue")  + theme(plot.title = element_text(family = "Helvetica", face = "bold", size = (22)), legend.position = "right", axis.text.x = element_text(angle = 60, hjust = 1), axis.text.y = element_text(angle = 60, hjust = 1, size = 8), axis.title.y = element_text(margin = margin(t = 0, r = 20, b = 0, l = 0), size = 16), axis.title.x = element_text(size = 16))
p <- p +  labs(title = taxa, x = "Year", y = ylab)
p
}
#p <- ggplot(taxa_dt, aes(x = year, y = taxacount, colour = "#FF9999")) + geom_point(colour = "cornflowerblue")
#p <- p + labs(x = "Year", y = ylab) + ggtitle(taxa) + scale_x_discrete(breaks = c(seq(minx, maxx, 25))) + theme(legend.position = "none", axis.text.x = element_text(angle = 60, hjust = 1), axis.text.y = element_text(angle = 60, hjust = 1), axis.title.y = element_text(margin = margin(t = 0, r = 20, b = 0, l = 0)))
p <- ggplot(taxa_dt, aes(x = year, y = taxacount, colour = "#FF9999"
, group = 1)) + geom_point(colour = "cornflowerblue")  + theme(plot.title = element_text(family = "Helvetica", face = "bold", size = (22)), legend.position = "right", axis.text.x = element_text(angle = 60, hjust = 1), axis.text.y = element_text(angle = 60, hjust = 1, size = 8), axis.title.y = element_text(margin = margin(t = 0, r = 20, b = 0, l = 0), size = 16), axis.title.x = element_text(size = 16))
taxaaccum <- function(taxa, rank) {
df <- subset(data_m, Kingdoms == taxa | Phyla == taxa | Classes == taxa | Orders == taxa | Families == taxa | Genera == taxa)
dt = as.data.table(unique(df))
setkey(dt, "year")
if (rank == "Phylum") {
dt[, id := as.numeric(factor(Phyla, levels = unique(Phyla)))]
ranklabel = "phyla"
} else if (rank == "Class") {
dt[, id := as.numeric(factor(Classes, levels = unique(Classes)))]
ranklabel = "classes"
} else if (rank == "Order") {
dt[, id := as.numeric(factor(Orders, levels = unique(Orders)))]
ranklabel = "orders"
} else if (rank == "Family") {
dt[, id := as.numeric(factor(Families, levels = unique(Families)))]
ranklabel = "families"
} else if (rank == "Genus") {
dt[, id := as.numeric(factor(Genera, levels = unique(Genera)))]
ranklabel = "genera"
} else if (rank == "Species") {
dt[, id := as.numeric(factor(AphiaIDs, levels = unique(AphiaIDs)))]
ranklabel = "species"
}
setkey(dt, "year", "id")
dt.out <- dt[J(unique(year)), mult = "last"]#[, Phylum := NULL]
dt.out[, id := cummax(id)]
numtaxa <- cummax(as.numeric(factor(dt$id)))
taxa_dt <- aggregate(numtaxa, list(year = dt$year), max )
colnames(taxa_dt) <- c("year", "taxacount")
minx <- min(as.vector(taxa_dt$year))
maxx <- max(as.vector(taxa_dt$year))
ylab = paste("Number of", ranklabel, sep = " ")
#p <- ggplot(taxa_dt, aes(x = year, y = taxacount, colour = "#FF9999")) + geom_point(colour = "cornflowerblue")
#p <- p + labs(x = "Year", y = ylab) + ggtitle(taxa) + scale_x_discrete(breaks = c(seq(minx, maxx, 25))) + theme(legend.position = "none", axis.text.x = element_text(angle = 60, hjust = 1), axis.text.y = element_text(angle = 60, hjust = 1), axis.title.y = element_text(margin = margin(t = 0, r = 20, b = 0, l = 0)))
p <- ggplot(taxa_dt, aes(x = year, y = taxacount, colour = "#FF9999"
, group = 1)) + geom_point(colour = "cornflowerblue")  + theme(plot.title = element_text(family = "Helvetica", face = "bold", size = (22)), legend.position = "right", axis.text.x = element_text(angle = 60, hjust = 1), axis.text.y = element_text(angle = 60, hjust = 1, size = 8), axis.title.y = element_text(margin = margin(t = 0, r = 20, b = 0, l = 0), size = 16), axis.title.x = element_text(size = 16))
p <- p +  labs(title = taxa, x = "Year", y = ylab)
p
}
#p <- ggplot(taxa_dt, aes(x = year, y = taxacount, colour = "#FF9999")) + geom_point(colour = "cornflowerblue")
#p <- p + labs(x = "Year", y = ylab) + ggtitle(taxa) + scale_x_discrete(breaks = c(seq(minx, maxx, 25))) + theme(legend.position = "none", axis.text.x = element_text(angle = 60, hjust = 1), axis.text.y = element_text(angle = 60, hjust = 1), axis.title.y = element_text(margin = margin(t = 0, r = 20, b = 0, l = 0)))
p <- ggplot(taxa_dt, aes(x = year, y = taxacount, colour = "#FF9999"
, group = 1)) + geom_point(colour = "cornflowerblue")  + theme(plot.title = element_text(family = "Helvetica", face = "bold", size = (22)), legend.position = "right", axis.text.x = element_text(angle = 60, hjust = 1), axis.text.y = element_text(angle = 60, hjust = 1, size = 8), axis.title.y = element_text(margin = margin(t = 0, r = 20, b = 0, l = 0), size = 16), axis.title.x = element_text(size = 16))
taxaaccum("Animalia", "Genus")
taxaaccum <- function(taxa, rank) {
df <- subset(data_m, Kingdoms == taxa | Phyla == taxa | Classes == taxa | Orders == taxa | Families == taxa | Genera == taxa)
dt = as.data.table(unique(df))
setkey(dt, "year")
if (rank == "Phylum") {
dt[, id := as.numeric(factor(Phyla, levels = unique(Phyla)))]
ranklabel = "phyla"
} else if (rank == "Class") {
dt[, id := as.numeric(factor(Classes, levels = unique(Classes)))]
ranklabel = "classes"
} else if (rank == "Order") {
dt[, id := as.numeric(factor(Orders, levels = unique(Orders)))]
ranklabel = "orders"
} else if (rank == "Family") {
dt[, id := as.numeric(factor(Families, levels = unique(Families)))]
ranklabel = "families"
} else if (rank == "Genus") {
dt[, id := as.numeric(factor(Genera, levels = unique(Genera)))]
ranklabel = "genera"
} else if (rank == "Species") {
dt[, id := as.numeric(factor(AphiaIDs, levels = unique(AphiaIDs)))]
ranklabel = "species"
}
setkey(dt, "year", "id")
dt.out <- dt[J(unique(year)), mult = "last"]#[, Phylum := NULL]
dt.out[, id := cummax(id)]
numtaxa <- cummax(as.numeric(factor(dt$id)))
taxa_dt <- aggregate(numtaxa, list(year = dt$year), max )
colnames(taxa_dt) <- c("year", "taxacount")
minx <- min(as.vector(taxa_dt$year))
maxx <- max(as.vector(taxa_dt$year))
ylab = paste("Number of", ranklabel, sep = " ")
p <- ggplot(taxa_dt, aes(x = year, y = taxacount, colour = "#FF9999")) + geom_point(colour = "cornflowerblue")
p <- p + labs(x = "Year", y = ylab) + ggtitle(taxa) + scale_x_discrete(breaks = c(seq(minx, maxx, 25))) + theme(legend.position = "none", axis.text.x = element_text(angle = 60, hjust = 1), axis.text.y = element_text(angle = 60, hjust = 1), axis.title.y = element_text(margin = margin(t = 0, r = 20, b = 0, l = 0)))
p
}
taxaaccum("Animalia", "Genus")
taxamodel("Animalia", "Genus", "logistic")
taxaaccum("Chromista", "Species")
taxaaccum("Chromista", "Family")
alltaxalist(data_m = data_m)
taxaaccum("Chiridota", "Species")
getwd()
knitr::opts_chunk$set(echo = TRUE)
data_m <- data.table::fread("/Users/hhsieh/Desktop/data_m2.csv")
#load the dataset of interest
#check the dimension of the dataset
library(biotaxa)
data_m <- data.table::fread("/Users/hhsieh/Desktop/data_m2.csv")
dim(data_m)
#load the dataset of interest
#check the dimension of the dataset
library(biotaxa)
dim(data_m)
community1 = data.frame(t(rep(1,500)))
community1
colnames(community) = paste("sp, 1:500")
colnames(community1) = paste("sp, 1:500")
community1
colnames(community1) = paste("sp", 1:500)
community1
community2 = data.frame(t(c(rep(1,250))))
colnames(community2) = paste("sp", 1:250)
community2
library(vegan)
S1 = specnumber(community1)
S1
S2 = specnumber(community2)
S2
S2 == 0.5 * S1
H1 = diversity(community1, index = "shannon")
H1
H2 = diversity(community2, index = "shannon")
H2
H1 == log(S1)
H2 == log(S2)
H2 == 0.5 * H1
shannon=matrix(ncol=2,nrow=1000)
for(i in 1:1000) {
community=data.frame(t(rep(1,i))); colnames(community)=paste("sp",1:i)
shannon[i,1]=i
shannon[i,2]=diversity(community,index="shannon") }
plot(shannon[,1],shannon[,2],xlab="Species Richness",ylab="Shannon Diversity",
main="Shannon")
HE1=exp(diversity(community1,index="shannon")); HE1
exp(log(1))
exp(log(10))
exp(log(100))
as.character(HE2)==as.character(0.5*HE1)
as.character(HE2) == as.character(0.5*HE1)
HE2=exp(diversity(community2,index="shannon")); HE2
as.character(HE2) == as.character(0.5*HE1)
from 1:1000
shannon_effective=matrix(ncol=2,nrow=1000)
for(i in 1:1000) {
community=data.frame(t(rep(1,i))); colnames(community)=paste("sp",1:i)
shannon_effective[i,1]=i
shannon_effective[i,2]=exp(diversity(community,index="shannon")) }
plot(shannon_effective[,1],shannon_effective[,2],xlab="Species Richness",
ylab="Effective Numbers of Species",main="Shannon (Effective)")
D1=diversity(community1,index="simpson"); D1
D2=diversity(community2,index="simpson"); D2
simpson=matrix(ncol=2,nrow=1000)
for(i in 1:1000) {
community=data.frame(t(rep(100,i))); colnames(community)=paste("sp",1:i)
simpson[i,1]=i
simpson[i,2]=diversity(community,index="simpson") }
plot(simpson[,1],simpson[,2],xlab="Species Richness",ylab="Simpson Diversity",
main="Simpson")
DE1=1/(1-D1); DE1
DE2=1/(1-D2); DE2
DE2==0.5*DE1
simpson_effective=matrix(ncol=2,nrow=1000)
for(i in 1:1000) {
community=data.frame(t(rep(100,i))); colnames(community)=paste("sp",1:i)
simpson_effective[i,1]=i
simpson_effective[i,2]=1/(1-diversity(community,index="simpson")) }
plot(simpson_effective[,1],simpson_effective[,2],xlab="Species Richness",
ylab="Effective Numbers of Species",main="Simpson (Effective")
divprof=function(community) {
cbind(
seq(0,5,by=0.11),
unlist(lapply(seq(0,5,by=0.11),function(q) sum(apply(community,1,function(x)
(x/sum(x))^q))^(1/(1-q))))) }
community1.divprof=divprof(community1)
plot(community1.divprof[,1],community1.divprof[,2],ylim=c(0,500),pch=16,cex=2,
xlab="q value",ylab="Diversity")
c1 <- t(rep(1,20))
c1
c1 <- t(rep(1,20), rep(2, 10))
c1 <- t(c(rep(1,20), rep(2, 10)))
c1
colnames(c1) <- paste("sp",1:30)
c1
S1 = specnumber(c1)
S1
c2 <- t(c(rep(1,10), rep(2,20)))
c2
colnames(c2) <- paste("sp",1:30)
S2 = specnumber(c2)
H1 = diversity(c1, index = "shannon")
H1
H2 = diversity(c2, index = "shannon")
H2
HE1 = exp(diversity(c1, index  = "shannon"))
HE1
HE2 = exp(diverwity(c2, index = "shannon"))
HE2 = exp(diversity(c2, index "shannon"))
HE2 = exp(diversity(c2, index = "shannon"))
HE2
?exp
?specnumber
