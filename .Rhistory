}
}
highScaleLevel4Fungus <- unlist(lapply(scales_dd2$highScaleLevel4Fungus, highScaleLevel4Fungus))
highScaleLevel4Fungus
superScaleZeroFungus <- function(superScaleZeroFungus) {
if(is.na(superScaleZeroFungus) == TRUE) {
superScaleZeroFungus = 0
} else {
superScaleZeroFungus = superScaleZeroFungus
}
}
superScaleZeroFungus <- unlist(lapply(scales_dd2$superScaleZeroFungus, superScaleZeroFungus))
superScaleZeroFungus
superScaleLevel1Fungus <- function(superScaleLevel1Fungus) {
if(is.na(superScaleLevel1Fungus) == TRUE) {
superScaleLevel1Fungus = 0
} else {
superScaleLevel1Fungus = superScaleLevel1Fungus
}
}
superScaleLevel1Fungus <- unlist(lapply(scales_dd2$superScaleLevel1Fungus, superScaleLevel1Fungus))
superScaleLevel1Fungus
superScaleLevel2Fungus <- function(superScaleLevel2Fungus) {
if(is.na(superScaleLevel2Fungus) == TRUE) {
superScaleLevel2Fungus = 0
} else {
superScaleLevel2Fungus = superScaleLevel2Fungus
}
}
superScaleLevel2Fungus <- unlist(lapply(scales_dd2$superScaleLevel2Fungus, superScaleLevel2Fungus))
superScaleLevel2Fungus
superScaleLevel3Fungus <- function(superScaleLevel3Fungus) {
if(is.na(superScaleLevel3Fungus) == TRUE) {
superScaleLevel3Fungus = 0
} else {
superScaleLevel3Fungus = superScaleLevel3Fungus
}
}
superScaleLevel3Fungus <- unlist(lapply(scales_dd2$superScaleLevel3Fungus, superScaleLevel3Fungus))
superScaleLevel3Fungus
superScaleLevel4Fungus <- function(superScaleLevel4Fungus) {
if(is.na(superScaleLevel4Fungus) == TRUE) {
superScaleLevel4Fungus = 0
} else {
superScaleLevel4Fungus = superScaleLevel4Fungus
}
}
superScaleLevel4Fungus <- unlist(lapply(scales_dd2$superScaleLevel4Fungus, superScaleLevel4Fungus))
superScaleLevel4Fungus
#scales categories: low 0-6; medium 7-30; high 31-70; super >70
#fungus: 1: 0-25%; 2: 25-50%; 3: 50 - 75%; 4: 75 - 100%
#
healthyscales <- function(
lowScaleZeroFungus, lowScaleLevel1Fungus, lowScaleLevel2Fungus, lowScaleLevel3Fungus, lowScaleLevel4Fungus,
mediumScaleZeroFungus, mediumScaleLevel1Fungus, mediumScaleLevel2Fungus, mediumScaleLevel3Fungus, mediumScaleLevel4Fungus,
highScaleZeroFungus, highScaleLevel1Fungus, highScaleLevel2Fungus, highScaleLevel3Fungus, highScaleLevel4Fungus,
superScaleZeroFungus, superScaleLevel1Fungus, superScaleLevel2Fungus, superScaleLevel3Fungus, superScaleLevel4Fungus
) {
lows = 3 * lowScaleZeroFungus + 3 * lowScaleLevel1Fungus * (1-0.125) + 3 * lowScaleLevel2Fungus * (1 - 0.375)+ 3 * lowScaleLevel3Fungus * (1 - 0.625) + 3 * lowScaleLevel4Fungus * (1 - 0.875)
mediums = 18.5 * mediumScaleZeroFungus + 18.5 * mediumScaleLevel1Fungus * (1-0.12) + 18.5 * mediumScaleLevel2Fungus * (1 - 0.375)+ 18.5 * mediumScaleLevel3Fungus * (1 - 0.625) + 18.5 * mediumScaleLevel4Fungus * (1 - 0.875)
highs = 55.5 * highScaleZeroFungus + 55.5 * highScaleLevel1Fungus * (1-0.125) + 55.5 * highScaleLevel2Fungus * (1 - 0.375)+ 55.5 * highScaleLevel3Fungus * (1 - 0.625) + 55.5 * highScaleLevel4Fungus * (1 - 0.875)
supers = 120 * superScaleZeroFungus + 120 * superScaleLevel1Fungus * (1-0.125) + 120 * superScaleLevel2Fungus * (1 - 0.375)+ 120 * superScaleLevel3Fungus * (1 - 0.625) + 120 * superScaleLevel4Fungus * (1 - 0.875)
allscales = lows + mediums + highs + supers
allscales
}
highhealthyscales <- mapply(
healthyscales,
lowScaleZeroFungus,
lowScaleLevel1Fungus,
lowScaleLevel2Fungus,
lowScaleLevel3Fungus,
lowScaleLevel4Fungus,
mediumScaleZeroFungus,
mediumScaleLevel1Fungus,
mediumScaleLevel2Fungus,
mediumScaleLevel3Fungus,
mediumScaleLevel4Fungus,
highScaleZeroFungus,
highScaleLevel1Fungus,
highScaleLevel2Fungus,
highScaleLevel3Fungus,
highScaleLevel4Fungus,
superScaleZeroFungus,
superScaleLevel1Fungus,
superScaleLevel2Fungus,
superScaleLevel3Fungus,
superScaleLevel4Fungus
)
highhealthyscales
scales_dd2$highhealthyscales <- highhealthyscales
scales_dd2$lowhealthyscales <- lowscales
scales_dd2$group <- groups
scales_density <- scales_dd2 %>% group_by(group) %>%
summarise(
sumhighscales = sum(highhealthyscales),
sumlowscales = sum(lowhealthyscales),
sumhealthyscales = sum(sumhighscales, sumlowscales)
)
scales_density <- data.frame(scales_density)
scales_density
sub_dd2 <- data.frame(sub_dd2)
sub_dd2
newdt <- cbind(sub_dd2, scales_density)
newdt
newdt$inverse_predrisk <- newdt$totalbeetles/newdt$sumhighscales
newdt$inverse_predrisk
newdt$predrisk <- newdt$sumhealthyscales/newdt$totalbeetles
length(which(is.infinite(newdt$inverse_predrisk)))
length(which(newdt$totalPhoridAttacks == 0))
plot(newdt$predrisk ~ newdt$totalPhoridAttacks)
write.csv(newdt, "predrisk_phorids_augsep2009.csv", row.names = FALSE)
nt2 <- newdt[is.finite(newdt$predrisk),]
nt2 <- nt2[nt2$predrisk < 548,]
dim(nt2)
head(nt2)
model <- lm(nt2$predrisk ~ nt2$totalPhoridAttacks)
summary(model)
plot(nt2$predrisk ~ nt2$totalPhoridAttacks)
library(quantreg)
qr1 <- rq(predrisk ~ totalPhoridAttacks, data=nt2, tau = c(0.8, 0.70, 0.65, 0.6, 0.55, 0.52))
summary(qr1, se = "nid")
abline(rq(predrisk ~ totalPhoridAttacks, data = nt2, tau = c(0.80)), col = "blue", lty = 2)
abline(rq(predrisk ~ totalPhoridAttacks, data = nt2, tau = 0.55), col = "blue")
NT <- rbind(nt, nt2)
#NT <- NT[NT$predrisk < 3000,]
#NT <- NT[NT$totalPhoridAttacks < 200,]
#plot((NT$predrisk+1)  ~ NT$totalPhoridAttacks, log = "y", xlab = "Phorid Attack Intensity (#attacks/5 minutes)", ylab = "inverse predation risk", xaxt="n",yaxt="n")
#mtext(quote(X),1,line=3,cex=2)
#mtext(quote(P(X)),2,line=4,cex=2)
#axis(2,at=c(10^0,10^1,10^2,10^3,10^4,cex.axis=1.5))
#axis(1,at=c(0,20,50,100,150,200))
#NT <- NT[NT$predrisk < 3000, ]
plot(NT$predrisk ~ NT$totalPhoridAttacks)
QR1 <- rq(NT$predrisk ~ NT$totalPhoridAttacks, tau = c(0.9, 0.85, 0.80, 0.75, 0.70, 0.65, 0.60, 0.55, 0.50))
summary(QR1, se = "nid")
abline(rq((predrisk+1) ~ totalPhoridAttacks, data = NT, tau = c(0.55)), col = "blue")
QR2 <-rq(NT$predrisk ~ NT$totalPhoridAttacks, tau = 0.94)
summary(QR2, se = "nid")
abline(rq((predrisk+1) ~ totalPhoridAttacks, data = NT, tau = 0.94), col = "blue")
#axis(1,at=log10(c(1,10,100,1000)),label=c(1,10,100,1000))
dd2 <- read.xls("2a. revicion general. agos-sep.09.xls", sheet = 1)
head(dd2)
dim(dd2)
colnames(dd2) <- c("collectionPlate", "treeSpecies", "areaName", "antNestClusterGroup", "coffeeBushNumber", "timeOfFirstPhoridAttack", "totalPhoridAttacks", "maleBeetleCount", "femaleBeetleCount", "unidentifiedAdultBeetleCount", "firstInstarBeetleLarvaeCount", "secondInstarBeetleLarvaeCount", "thirdInstarBeetleLarvaeCount", "fourthInstarBeetleLarvaeCount", "pupaBeetleCount","healthyBorers", "boredBorers", "withOrWithoutAzteca", "observation")
dd2$year <- "2009"
dd2$month <- "Aug - Sep"
dd2[179,]
dd2 <- dd2[-c(179), ]
dd2 <- dd2[-c(1,2), ]
dim(dd2)
seri <- seq(1:56)
group  <- function(seri) {
rep(paste("Irlanda09_", seri, sep = ""), 4)
}
groups <- lapply(seri, group)
groups <- unlist(groups)
groups
dd2$group <- groups
library(dplyr)
dd2$femaleBeetleCount <- as.numeric(levels(dd2$femaleBeetleCount)[as.integer(dd2$femaleBeetleCount)])
dd2$maleBeetleCount <- as.numeric(levels(dd2$maleBeetleCount)[as.integer(dd2$maleBeetleCount)])
dd2$unidentifiedAdultBeetleCount <- as.numeric(levels(dd2$unidentifiedAdultBeetleCount)[as.integer(dd2$unidentifiedAdultBeetleCount)])
dd2$firstInstarBeetleLarvaeCount <- as.numeric(levels(dd2$firstInstarBeetleLarvaeCount)[as.integer(dd2$firstInstarBeetleLarvaeCount)])
dd2$secondInstarBeetleLarvaeCount <- as.numeric(levels(dd2$secondInstarBeetleLarvaeCount)[as.integer(dd2$secondInstarBeetleLarvaeCount)])
dd2$thirdInstarBeetleLarvaeCount <- as.numeric(levels(dd2$thirdInstarBeetleLarvaeCount)[as.integer(dd2$thirdInstarBeetleLarvaeCount)])
dd2$fourthInstarBeetleLarvaeCount <- as.numeric(levels(dd2$fourthInstarBeetleLarvaeCount)[as.integer(dd2$fourthInstarBeetleLarvaeCount)])
dd2$pupaBeetleCount <- as.numeric(levels(dd2$pupaBeetleCount)[as.integer(dd2$pupaBeetleCount)])
dd2$totalPhoridAttacks <- as.numeric(levels(dd2$totalPhoridAttacks)[as.integer(dd2$totalPhoridAttacks)])
totalphorids <- function(totalPhoridAttacks) {
if(is.na(totalPhoridAttacks) == TRUE) {
totalPhoridAttacks = 0
totalPhoridAttacks
} else {
totalPhoridAttacks
}
}
totalps <- unlist(lapply(dd2$totalPhoridAttacks, totalphorids))
dd2$totalPhoridAttacks <- totalps
sub_dd2  <- dd2 %>% group_by(group) %>%
summarise(
femaleBeetleCount = sum(femaleBeetleCount),
maleBeetleCount = sum(maleBeetleCount),
unidentifiedAdultBeetleCount = sum(unidentifiedAdultBeetleCount),
firstInstarBeetleLarvaeCount = sum(firstInstarBeetleLarvaeCount),
secondInstarBeetleLarvaeCount = sum(secondInstarBeetleLarvaeCount),
thirdInstarBeetleLarvaeCount= sum(thirdInstarBeetleLarvaeCount),
fourthInstarBeetleLarvaeCount = sum(fourthInstarBeetleLarvaeCount),
pupaBeetleCount = sum(pupaBeetleCount),
totalbeetles = sum(femaleBeetleCount, maleBeetleCount, unidentifiedAdultBeetleCount,firstInstarBeetleLarvaeCount, secondInstarBeetleLarvaeCount, thirdInstarBeetleLarvaeCount, fourthInstarBeetleLarvaeCount),
totalPhoridAttacks = sum(totalPhoridAttacks)
)
scales_dd2 <- read.xls("2a. revicion general. agos-sep.09.xls", sheet = 2)
head(scales_dd2)
dim(scales_dd2)
head(scales_dd2)
colnames(scales_dd2) <- c("collectionPlate", "treeSpecies", "areaName", "antNestClusterGroup", "coffeeBushNumber", "scaleLevel0", "scaleLevel50", "percentageHeloFungus", "lowScaleZeroFungus", "lowScaleLevel1Fungus", "lowScaleLevel2Fungus", "lowScaleLevel3Fungus", "lowScaleLevel4Fungus", "mediumScaleZeroFungus", "mediumScaleLevel1Fungus", "mediumScaleLevel2Fungus", "mediumScaleLevel3Fungus", "mediumScaleLevel4Fungus", "highScaleZeroFungus", "highScaleLevel1Fungus", "highScaleLevel2Fungus", "highScaleLevel3Fungus", "highScaleLevel4Fungus", "superScaleZeroFungus", "superScaleLevel1Fungus", "superScaleLevel2Fungus", "superScaleLevel3Fungus", "superScaleLevel4Fungus", "observation")
scales_dd2 <- scales_dd2[-c(1,2, 179),]
dim(scales_dd2)
head(scales_dd2)
scales_dd2$year <- "2009"
scales_dd2$month <- "Aug - Sep"
dim(scales_dd2)
write.csv(scales_dd2, "/Users/hhsieh/Documents/Mio/Mexico Data/2009/Analyses/scale_densities_AugSep_2009.csv", row.names = FALSE)
scales_dd2 <- read.csv("/Users/hhsieh/Documents/Mio/Mexico Data/2009/Analyses/scale_densities_AugSep_2009.csv", sep = ",", header = T)
levels(scales_dd2$scaleLevel0)
class(scales_dd2$scaleLevel0)
which(scales_dd2$scaleLevel0 == 0)
lowscale <- function(scaleLevel0, scaleLevel50, percentageHeloFungus) {
if(is.na(scaleLevel50) == TRUE & is.na(percentageHeloFungus) == FALSE) {
zeroscale = 0
fiftyscale = 0
(zeroscale + fiftyscale) * (1 - percentageHeloFungus)
} else if(is.na(scaleLevel50) == FALSE & is.na(percentageHeloFungus) == FALSE) {
zeroscale = 0
fiftyscale = 35
(zeroscale + fiftyscale) * (1 - percentageHeloFungus)
}
}
zeroscales <- as.numeric(scales_dd2$scaleLevel0)
fiftyscales <-as.numeric(scales_dd2$scaleLevel50)
fungus <- function(percentageHeloFungus) {
as.numeric(strsplit(as.character(percentageHeloFungus), "%")[[1]][1]) / 100
}
percentageHeloFungus <- as.character(scales_dd2$percentageHeloFungus)
percentageHeloFungus <- unlist(lapply(percentageHeloFungus, fungus))
percentageHeloFungus
lowscales <- unlist(mapply(lowscale, zeroscales, fiftyscales, percentageHeloFungus))
lowscales
lowscale <- function(lowscale) {
if(lowscale == "NA") {
return(0)
} else {
return(lowscale)
}
}
lowscales <- unlist(lapply(lowscales, lowscale))
lowscales <- as.numeric(lowscales)
lowscales
lowScaleZeroFungus <- function(lowScaleZeroFungus) {
if(is.na(lowScaleZeroFungus) == TRUE) {
lowScaleZeroFungus = 0
} else {
lowScaleZeroFungus = lowScaleZeroFungus
}
}
lowScaleZeroFungus <- unlist(lapply(scales_dd2$lowScaleZeroFungus, lowScaleZeroFungus))
lowScaleZeroFungus
lowScaleLevel1Fungus <- function(lowScaleLevel1Fungus) {
if(is.na(lowScaleLevel1Fungus) == TRUE) {
lowScaleLevel1Fungus = 0
} else {
lowScaleLevel1Fungus = lowScaleLevel1Fungus
}
}
lowScaleLevel1Fungus <- unlist(lapply(scales_dd2$lowScaleLevel1Fungus, lowScaleLevel1Fungus))
lowScaleLevel1Fungus
lowScaleLevel2Fungus <- function(lowScaleLevel2Fungus) {
if(is.na(lowScaleLevel2Fungus) == TRUE) {
lowScaleLevel2Fungus = 0
} else {
lowScaleLevel2Fungus = lowScaleLevel2Fungus
}
}
lowScaleLevel2Fungus <- unlist(lapply(scales_dd2$lowScaleLevel2Fungus, lowScaleLevel2Fungus))
lowScaleLevel2Fungus
lowScaleLevel3Fungus <- function(lowScaleLevel3Fungus) {
if(is.na(lowScaleLevel3Fungus) == TRUE) {
lowScaleLevel3Fungus = 0
return(lowScaleLevel3Fungus)
} else {
lowScaleLevel3Fungus = lowScaleLevel3Fungus
return(lowScaleLevel3Fungus)
}
}
lowScaleLevel3Fungus <- unlist(lapply(scales_dd2$lowScaleLevel3Fungus, lowScaleLevel3Fungus))
lowScaleLevel3Fungus
lowScaleLevel4Fungus <- function(lowScaleLevel4Fungus) {
if(is.na(lowScaleLevel4Fungus) == TRUE) {
lowScaleLevel4Fungus = 0
} else {
lowScaleLevel4Fungus = lowScaleLevel4Fungus
}
}
lowScaleLevel4Fungus <- unlist(lapply(scales_dd2$lowScaleLevel4Fungus, lowScaleLevel4Fungus))
lowScaleLevel4Fungus
mediumScaleZeroFungus <- function(mediumScaleZeroFungus) {
if(is.na(mediumScaleZeroFungus) == TRUE) {
mediumScaleZeroFungus = 0
} else {
mediumScaleZeroFungus = mediumScaleZeroFungus
}
}
mediumScaleZeroFungus <- unlist(lapply(scales_dd2$mediumScaleZeroFungus, mediumScaleZeroFungus))
mediumScaleZeroFungus
mediumScaleLevel1Fungus <- function(mediumScaleLevel1Fungus) {
if(is.na(mediumScaleLevel1Fungus) == TRUE) {
mediumScaleLevel1Fungus = 0
} else {
mediumScaleLevel1Fungus = mediumScaleLevel1Fungus
}
}
mediumScaleLevel1Fungus <- unlist(lapply(scales_dd2$mediumScaleLevel1Fungus, mediumScaleLevel1Fungus))
mediumScaleLevel1Fungus
mediumScaleLevel2Fungus <- function(mediumScaleLevel2Fungus) {
if(is.na(mediumScaleLevel2Fungus) == TRUE) {
mediumScaleLevel2Fungus = 0
} else {
mediumScaleLevel2Fungus = mediumScaleLevel2Fungus
}
}
mediumScaleLevel2Fungus <- unlist(lapply(scales_dd2$mediumScaleLevel2Fungus, mediumScaleLevel2Fungus))
mediumScaleLevel2Fungus
mediumScaleLevel3Fungus <- function(mediumScaleLevel3Fungus) {
if(is.na(mediumScaleLevel3Fungus) == TRUE) {
mediumScaleLevel3Fungus = 0
} else {
mediumScaleLevel3Fungus = mediumScaleLevel3Fungus
}
}
mediumScaleLevel3Fungus <- unlist(lapply(scales_dd2$mediumScaleLevel3Fungus, mediumScaleLevel3Fungus))
mediumScaleLevel3Fungus
mediumScaleLevel4Fungus <- function(mediumScaleLevel4Fungus) {
if(is.na(mediumScaleLevel4Fungus) == TRUE) {
mediumScaleLevel4Fungus = 0
} else {
mediumScaleLevel4Fungus = mediumScaleLevel4Fungus
}
}
mediumScaleLevel4Fungus <- unlist(lapply(scales_dd2$mediumScaleLevel4Fungus, mediumScaleLevel4Fungus))
mediumScaleLevel4Fungus
highScaleZeroFungus <- function(highScaleZeroFungus) {
if(is.na(highScaleZeroFungus) == TRUE) {
highScaleZeroFungus = 0
} else {
highScaleZeroFungus = highScaleZeroFungus
}
}
highScaleZeroFungus <- unlist(lapply(scales_dd2$highScaleZeroFungus, highScaleZeroFungus))
highScaleZeroFungus
highScaleLevel1Fungus <- function(highScaleLevel1Fungus) {
if(is.na(highScaleLevel1Fungus) == TRUE) {
highScaleLevel1Fungus = 0
} else {
highScaleLevel1Fungus = highScaleLevel1Fungus
}
}
highScaleLevel1Fungus <- unlist(lapply(scales_dd2$highScaleLevel1Fungus, highScaleLevel1Fungus))
highScaleLevel1Fungus
highScaleLevel2Fungus <- function(highScaleLevel2Fungus) {
if(is.na(highScaleLevel2Fungus) == TRUE) {
highScaleLevel2Fungus = 0
} else {
highScaleLevel2Fungus = highScaleLevel2Fungus
}
}
highScaleLevel2Fungus <- unlist(lapply(scales_dd2$highScaleLevel2Fungus, highScaleLevel2Fungus))
highScaleLevel2Fungus
highScaleLevel3Fungus <- function(highScaleLevel3Fungus) {
if(is.na(highScaleLevel3Fungus) == TRUE) {
highScaleLevel3Fungus = 0
} else {
highScaleLevel3Fungus = highScaleLevel3Fungus
}
}
highScaleLevel3Fungus <- unlist(lapply(scales_dd2$highScaleLevel3Fungus, highScaleLevel3Fungus))
highScaleLevel3Fungus
highScaleLevel4Fungus <- function(highScaleLevel4Fungus) {
if(is.na(highScaleLevel4Fungus) == TRUE) {
highScaleLevel4Fungus = 0
} else {
highScaleLevel4Fungus = highScaleLevel4Fungus
}
}
highScaleLevel4Fungus <- unlist(lapply(scales_dd2$highScaleLevel4Fungus, highScaleLevel4Fungus))
highScaleLevel4Fungus
superScaleZeroFungus <- function(superScaleZeroFungus) {
if(is.na(superScaleZeroFungus) == TRUE) {
superScaleZeroFungus = 0
} else {
superScaleZeroFungus = superScaleZeroFungus
}
}
superScaleZeroFungus <- unlist(lapply(scales_dd2$superScaleZeroFungus, superScaleZeroFungus))
superScaleZeroFungus
superScaleLevel1Fungus <- function(superScaleLevel1Fungus) {
if(is.na(superScaleLevel1Fungus) == TRUE) {
superScaleLevel1Fungus = 0
} else {
superScaleLevel1Fungus = superScaleLevel1Fungus
}
}
superScaleLevel1Fungus <- unlist(lapply(scales_dd2$superScaleLevel1Fungus, superScaleLevel1Fungus))
superScaleLevel1Fungus
superScaleLevel2Fungus <- function(superScaleLevel2Fungus) {
if(is.na(superScaleLevel2Fungus) == TRUE) {
superScaleLevel2Fungus = 0
} else {
superScaleLevel2Fungus = superScaleLevel2Fungus
}
}
superScaleLevel2Fungus <- unlist(lapply(scales_dd2$superScaleLevel2Fungus, superScaleLevel2Fungus))
superScaleLevel2Fungus
superScaleLevel3Fungus <- function(superScaleLevel3Fungus) {
if(is.na(superScaleLevel3Fungus) == TRUE) {
superScaleLevel3Fungus = 0
} else {
superScaleLevel3Fungus = superScaleLevel3Fungus
}
}
superScaleLevel3Fungus <- unlist(lapply(scales_dd2$superScaleLevel3Fungus, superScaleLevel3Fungus))
superScaleLevel3Fungus
superScaleLevel4Fungus <- function(superScaleLevel4Fungus) {
if(is.na(superScaleLevel4Fungus) == TRUE) {
superScaleLevel4Fungus = 0
} else {
superScaleLevel4Fungus = superScaleLevel4Fungus
}
}
superScaleLevel4Fungus <- unlist(lapply(scales_dd2$superScaleLevel4Fungus, superScaleLevel4Fungus))
superScaleLevel4Fungus
#scales categories: low 0-6; medium 7-30; high 31-70; super >70
#fungus: 1: 0-25%; 2: 25-50%; 3: 50 - 75%; 4: 75 - 100%
#
healthyscales <- function(
lowScaleZeroFungus, lowScaleLevel1Fungus, lowScaleLevel2Fungus, lowScaleLevel3Fungus, lowScaleLevel4Fungus,
mediumScaleZeroFungus, mediumScaleLevel1Fungus, mediumScaleLevel2Fungus, mediumScaleLevel3Fungus, mediumScaleLevel4Fungus,
highScaleZeroFungus, highScaleLevel1Fungus, highScaleLevel2Fungus, highScaleLevel3Fungus, highScaleLevel4Fungus,
superScaleZeroFungus, superScaleLevel1Fungus, superScaleLevel2Fungus, superScaleLevel3Fungus, superScaleLevel4Fungus
) {
lows = 3 * lowScaleZeroFungus + 3 * lowScaleLevel1Fungus * (1-0.125) + 3 * lowScaleLevel2Fungus * (1 - 0.375)+ 3 * lowScaleLevel3Fungus * (1 - 0.625) + 3 * lowScaleLevel4Fungus * (1 - 0.875)
mediums = 18.5 * mediumScaleZeroFungus + 18.5 * mediumScaleLevel1Fungus * (1-0.12) + 18.5 * mediumScaleLevel2Fungus * (1 - 0.375)+ 18.5 * mediumScaleLevel3Fungus * (1 - 0.625) + 18.5 * mediumScaleLevel4Fungus * (1 - 0.875)
highs = 55.5 * highScaleZeroFungus + 55.5 * highScaleLevel1Fungus * (1-0.125) + 55.5 * highScaleLevel2Fungus * (1 - 0.375)+ 55.5 * highScaleLevel3Fungus * (1 - 0.625) + 55.5 * highScaleLevel4Fungus * (1 - 0.875)
supers = 120 * superScaleZeroFungus + 120 * superScaleLevel1Fungus * (1-0.125) + 120 * superScaleLevel2Fungus * (1 - 0.375)+ 120 * superScaleLevel3Fungus * (1 - 0.625) + 120 * superScaleLevel4Fungus * (1 - 0.875)
allscales = lows + mediums + highs + supers
allscales
}
highhealthyscales <- mapply(
healthyscales,
lowScaleZeroFungus,
lowScaleLevel1Fungus,
lowScaleLevel2Fungus,
lowScaleLevel3Fungus,
lowScaleLevel4Fungus,
mediumScaleZeroFungus,
mediumScaleLevel1Fungus,
mediumScaleLevel2Fungus,
mediumScaleLevel3Fungus,
mediumScaleLevel4Fungus,
highScaleZeroFungus,
highScaleLevel1Fungus,
highScaleLevel2Fungus,
highScaleLevel3Fungus,
highScaleLevel4Fungus,
superScaleZeroFungus,
superScaleLevel1Fungus,
superScaleLevel2Fungus,
superScaleLevel3Fungus,
superScaleLevel4Fungus
)
highhealthyscales
scales_dd2$highhealthyscales <- highhealthyscales
scales_dd2$lowhealthyscales <- lowscales
scales_dd2$group <- groups
scales_density <- scales_dd2 %>% group_by(group) %>%
summarise(
sumhighscales = sum(highhealthyscales),
sumlowscales = sum(lowhealthyscales),
sumhealthyscales = sum(sumhighscales, sumlowscales)
)
scales_density <- data.frame(scales_density)
scales_density
sub_dd2 <- data.frame(sub_dd2)
sub_dd2
newdt <- cbind(sub_dd2, scales_density)
newdt
newdt$inverse_predrisk <- newdt$totalbeetles/newdt$sumhighscales
newdt$inverse_predrisk
newdt$predrisk <- newdt$sumhealthyscales/newdt$totalbeetles
length(which(is.infinite(newdt$inverse_predrisk)))
length(which(newdt$totalPhoridAttacks == 0))
plot(newdt$predrisk ~ newdt$totalPhoridAttacks)
write.csv(newdt, "predrisk_phorids_augsep2009.csv", row.names = FALSE)
nt2 <- newdt[is.finite(newdt$predrisk),]
nt2 <- nt2[nt2$predrisk < 548,]
dim(nt2)
head(nt2)
model <- lm(nt2$predrisk ~ nt2$totalPhoridAttacks)
summary(model)
plot(nt2$predrisk ~ nt2$totalPhoridAttacks)
library(quantreg)
qr1 <- rq(predrisk ~ totalPhoridAttacks, data=nt2, tau = c(0.8, 0.70, 0.65, 0.6, 0.55, 0.52))
summary(qr1, se = "nid")
abline(rq(predrisk ~ totalPhoridAttacks, data = nt2, tau = c(0.80)), col = "blue", lty = 2)
abline(rq(predrisk ~ totalPhoridAttacks, data = nt2, tau = 0.55), col = "blue")
NT <- rbind(nt, nt2)
#NT <- NT[NT$predrisk < 3000, ]
plot(NT$predrisk ~ NT$totalPhoridAttacks)
QR1 <- rq(NT$predrisk ~ NT$totalPhoridAttacks, tau = c(0.9, 0.85, 0.80, 0.75, 0.70, 0.65, 0.60, 0.55, 0.50))
summary(QR1, se = "nid")
abline(rq(predrisk ~ totalPhoridAttacks, data = nt2, tau = c(0.80)), col = "blue", lty = 2)
abline(rq(predrisk ~ totalPhoridAttacks, data = nt2, tau = 0.55), col = "blue")
devtools::document()
devtools::check()
library(biotaxa)
taxa_rich("Animalia", "Genus")
rm(list=ls())
taxa_rich("Animalia", "Genus")
devtools::document()
devtools::check()
devtools::install()
library(biotaxa)
taxa_rich("Animalia", "Species")
