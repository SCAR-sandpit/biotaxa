head(dd$maleBeetleCount)
dd$unidentifiedAdultBeetleCount <- as.numeric(levels(dd$unidentifiedAdultBeetleCount)[as.integer(dd$unidentifiedAdultBeetleCount)])
head(dd$unidentifiedAdultBeetleCount)
dd$firstInstarBeetleLarvaeCount <- as.numeric(levels(dd$firstInstarBeetleLarvaeCount)[as.integer(dd$firstInstarBeetleLarvaeCount)])
dd$secondInstarBeetleLarvaeCount <- as.numeric(levels(dd$secondInstarBeetleLarvaeCount)[as.integer(dd$secondInstarBeetleLarvaeCount)])
dd$thirdInstarBeetleLarvaeCount <- as.numeric(levels(dd$thirdInstarBeetleLarvaeCount)[as.integer(dd$thirdInstarBeetleLarvaeCount)])
dd$fourthInstarBeetleLarvaeCount <- as.numeric(levels(dd$fourthInstarBeetleLarvaeCount)[as.integer(dd$fourthInstarBeetleLarvaeCount)])
dd$pupaBeetleCount <- as.numeric(levels(dd$pupaBeetleCount)[as.integer(dd$pupaBeetleCount)])
head(dd$firstInstarBeetleLarvaeCount)
head(dd$secondInstarBeetleLarvaeCount)
head(dd$thirdInstarBeetleLarvaeCount)
head(dd$fourthInstarBeetleLarvaeCount)
head(dd$pupaBeetleCount)
dd2 <- read.xls("REVICION GENERAL July 09..xls", sheet = 2)
head(dd2)
dim(dd2)
colnames(dd2) <- c("collectionDate", "collectionPlate", "treeSpecies", "areaName", "antNestClusterGroup", "coffeeBushNumber", "scaleLevel0", "scaleLevel50", "percentageHeloFungus", "lowScaleZeroFungus", "lowScaleLevel1Fungus", "lowScaleLevel2Fungus", "lowScaleLevel3Fungus", "lowScaleLevel4Fungus", "mediumScaleZeroFungus", "mediumScaleLevel1Fungus", "mediumScaleLevel2Fungus", "mediumScaleLevel3Fungus", "mediumScaleLevel4Fungus", "highScaleZeroFungus", "highScaleLevel1Fungus", "highScaleLevel2Fungus", "highScaleLevel3Fungus", "highScaleLevel4Fungus", "superScaleZeroFungus", "superScaleLevel1Fungus", "superScaleLevel2Fungus", "superScaleLevel3Fungus", "superScaleLevel4Fungus")
dd2$year <- "2009"
dd2$month <- "June-July"
head(dd2)
dim(dd2)
dd2 <- dd2[-c(1:2) , -c(30:34)]
head(dd2)
tail(dd2)
dim(dd2)
dd2[177,]
dd2 <- dd2[-c(177), ]
dim(dd2)
dd2$group <- groups
head(dd2)
levels(scales$scaleLevel0)
levels(dd2$scaleLevel0)
class(dd2$scaleLevel0)
which(dd2$scaleLevel0 == 0)
lowscale <- function(scaleLevel0, scaleLevel50, percentageHeloFungus) {
if(is.na(scaleLevel0) == TRUE & is.na(scaleLevel50) == TRUE & is.na(percentageHeloFungus) == FALSE) {
zeroscale = 0
fiftyscale = 0
(zeroscale + fiftyscale) * (1 - percentageHeloFungus)
} else if(is.na(scaleLevel0) == FALSE & is.na(scaleLevel50) == TRUE & is.na(percentageHeloFungus) == FALSE) {
zeroscale = 10
fiftyscale = 0
(zeroscale + fiftyscale) * (1 - percentageHeloFungus)
} else if(is.na(scaleLevel0) == TRUE & is.na(scaleLevel50) == FALSE & is.na(percentageHeloFungus) == FALSE) {
zeroscale = 0
fiftyscale = 35
(zeroscale + fiftyscale) * (1 - percentageHeloFungus)
} else {
"NA"
}
}
zeroscales <- as.numeric(scales$scaleLevel0)
fiftyscales <-as.numeric(scales$scaleLevel50)
zeroscales <- as.numeric(dd2$scaleLevel0)
fiftyscales <-as.numeric(dd2$scaleLevel50)
fungus <- function(percentageHeloFungus) {
as.numeric(strsplit(as.character(percentageHeloFungus), "%")[[1]][1]) / 100
}
percentageHeloFungus <- as.character(dd2$percentageHeloFungus)
percentageHeloFungus <- unlist(lapply(percentageHeloFungus, fungus))
percentageHeloFungus
lowscales <- unlist(mapply(lowscale, zeroscales, fiftyscales, percentageHeloFungus))
lowscales
percentageHeloFungus <- as.character(dd2$percentageHeloFungus)
percentageHeloFungus <- unlist(lapply(percentageHeloFungus, fungus))
percentageHeloFungus
head(dd2$percentageHeloFungus)
percentageHeloFungus
percentageHeloFungus <- unlist(lapply(percentageHeloFungus, fungus))
percentageHeloFungus
lowscales <- unlist(mapply(lowscale, zeroscales, fiftyscales, percentageHeloFungus))
lowscales
lowscales
lowscale <- function(lowscale) {
if(lowscale == "NA") {
return(0)
} else {
return(lowscale)
}
}
lowscales <- unlist(lapply(lowscales, lowscale))
lowscales <- as.numeric(lowscales)
lowscales
lowScaleZeroFungus <- function(lowScaleZeroFungus) {
if(is.na(lowScaleZeroFungus) == TRUE) {
lowScaleZeroFungus = 0
} else {
lowScaleZeroFungus = lowScaleZeroFungus
}
}
lowScaleZeroFungus <- unlist(lapply(scales$lowScaleZeroFungus, lowScaleZeroFungus))
lowScaleZeroFungus <- function(lowScaleZeroFungus) {
if(is.na(lowScaleZeroFungus) == TRUE) {
lowScaleZeroFungus = 0
} else {
lowScaleZeroFungus = lowScaleZeroFungus
}
}
lowScaleZeroFungus <- unlist(lapply(scales$lowScaleZeroFungus, lowScaleZeroFungus))
lowScaleZeroFungus <- unlist(lapply(dd2$lowScaleZeroFungus, lowScaleZeroFungus))
lowScaleZeroFungus
lowScaleLevel1Fungus <- function(lowScaleLevel1Fungus) {
if(is.na(lowScaleLevel1Fungus) == TRUE) {
lowScaleLevel1Fungus = 0
} else {
lowScaleLevel1Fungus = lowScaleLevel1Fungus
}
}
lowScaleLevel1Fungus <- unlist(lapply(scales$lowScaleLevel1Fungus, lowScaleLevel1Fungus))
lowScaleLevel1Fungus <- unlist(lapply(dd2$lowScaleLevel1Fungus, lowScaleLevel1Fungus))
lowScaleLevel1Fungus
lowScaleLevel2Fungus <- function(lowScaleLevel2Fungus) {
if(is.na(lowScaleLevel2Fungus) == TRUE) {
lowScaleLevel2Fungus = 0
} else {
lowScaleLevel2Fungus = lowScaleLevel2Fungus
}
}
lowScaleLevel2Fungus <- unlist(lapply(dd2$lowScaleLevel2Fungus, lowScaleLevel2Fungus))
lowScaleLevel2Fungus
lowScaleLevel3Fungus <- function(lowScaleLevel3Fungus) {
if(is.na(lowScaleLevel3Fungus) == TRUE) {
lowScaleLevel3Fungus = 0
return(lowScaleLevel3Fungus)
} else {
lowScaleLevel3Fungus = lowScaleLevel3Fungus
return(lowScaleLevel3Fungus)
}
}
lowScaleLevel3Fungus <- unlist(lapply(dd2$lowScaleLevel3Fungus, lowScaleLevel3Fungus))
lowScaleLevel3Fungus
lowScaleLevel4Fungus <- function(lowScaleLevel4Fungus) {
if(is.na(lowScaleLevel4Fungus) == TRUE) {
lowScaleLevel4Fungus = 0
} else {
lowScaleLevel4Fungus = lowScaleLevel4Fungus
}
}
lowScaleLevel4Fungus <- unlist(lapply(dd2$lowScaleLevel4Fungus, lowScaleLevel4Fungus))
lowScaleLevel4Fungus
mediumScaleZeroFungus <- function(mediumScaleZeroFungus) {
if(is.na(mediumScaleZeroFungus) == TRUE) {
mediumScaleZeroFungus = 0
} else {
mediumScaleZeroFungus = mediumScaleZeroFungus
}
}
mediumScaleZeroFungus <- unlist(lapply(dd2$mediumScaleZeroFungus, mediumScaleZeroFungus))
mediumScaleZeroFungus
mediumScaleLevel1Fungus <- function(mediumScaleLevel1Fungus) {
if(is.na(mediumScaleLevel1Fungus) == TRUE) {
mediumScaleLevel1Fungus = 0
} else {
mediumScaleLevel1Fungus = mediumScaleLevel1Fungus
}
}
mediumScaleLevel1Fungus <- unlist(lapply(dd2$mediumScaleLevel1Fungus, mediumScaleLevel1Fungus))
mediumScaleLevel1Fungus
mediumScaleLevel2Fungus <- function(mediumScaleLevel2Fungus) {
if(is.na(mediumScaleLevel2Fungus) == TRUE) {
mediumScaleLevel2Fungus = 0
} else {
mediumScaleLevel2Fungus = mediumScaleLevel2Fungus
}
}
mediumScaleLevel2Fungus <- unlist(lapply(dd2$mediumScaleLevel2Fungus, mediumScaleLevel2Fungus))
mediumScaleLevel2Fungus
mediumScaleLevel3Fungus <- function(mediumScaleLevel3Fungus) {
if(is.na(mediumScaleLevel3Fungus) == TRUE) {
mediumScaleLevel3Fungus = 0
} else {
mediumScaleLevel3Fungus = mediumScaleLevel3Fungus
}
}
mediumScaleLevel3Fungus <- unlist(lapply(dd2$mediumScaleLevel3Fungus, mediumScaleLevel3Fungus))
mediumScaleLevel3Fungus
mediumScaleLevel4Fungus <- function(mediumScaleLevel4Fungus) {
if(is.na(mediumScaleLevel4Fungus) == TRUE) {
mediumScaleLevel4Fungus = 0
} else {
mediumScaleLevel4Fungus = mediumScaleLevel4Fungus
}
}
mediumScaleLevel4Fungus <- unlist(lapply(dd2$mediumScaleLevel4Fungus, mediumScaleLevel4Fungus))
mediumScaleLevel4Fungus
highScaleZeroFungus <- function(highScaleZeroFungus) {
if(is.na(highScaleZeroFungus) == TRUE) {
highScaleZeroFungus = 0
} else {
highScaleZeroFungus = highScaleZeroFungus
}
}
highScaleZeroFungus <- unlist(lapply(dd2$highScaleZeroFungus, highScaleZeroFungus))
highScaleZeroFungus
highScaleLevel1Fungus <- function(highScaleLevel1Fungus) {
if(is.na(highScaleLevel1Fungus) == TRUE) {
highScaleLevel1Fungus = 0
} else {
highScaleLevel1Fungus = highScaleLevel1Fungus
}
}
highScaleLevel1Fungus <- unlist(lapply(dd2$highScaleLevel1Fungus, highScaleLevel1Fungus))
highScaleLevel1Fungus
highScaleLevel2Fungus <- function(highScaleLevel2Fungus) {
if(is.na(highScaleLevel2Fungus) == TRUE) {
highScaleLevel2Fungus = 0
} else {
highScaleLevel2Fungus = highScaleLevel2Fungus
}
}
highScaleLevel2Fungus <- unlist(lapply(dd2$highScaleLevel2Fungus, highScaleLevel2Fungus))
highScaleLevel2Fungus
highScaleLevel3Fungus <- function(highScaleLevel3Fungus) {
if(is.na(highScaleLevel3Fungus) == TRUE) {
highScaleLevel3Fungus = 0
} else {
highScaleLevel3Fungus = highScaleLevel3Fungus
}
}
highScaleLevel3Fungus <- unlist(lapply(dd2$highScaleLevel3Fungus, highScaleLevel3Fungus))
highScaleLevel3Fungus
highScaleLevel4Fungus <- function(highScaleLevel4Fungus) {
if(is.na(highScaleLevel4Fungus) == TRUE) {
highScaleLevel4Fungus = 0
} else {
highScaleLevel4Fungus = highScaleLevel4Fungus
}
}
highScaleLevel4Fungus <- unlist(lapply(dd2$highScaleLevel4Fungus, highScaleLevel4Fungus))
highScaleLevel4Fungus
superScaleZeroFungus <- function(superScaleZeroFungus) {
if(is.na(superScaleZeroFungus) == TRUE) {
superScaleZeroFungus = 0
} else {
superScaleZeroFungus = superScaleZeroFungus
}
}
superScaleZeroFungus <- unlist(lapply(dd2$superScaleZeroFungus, superScaleZeroFungus))
superScaleZeroFungus
superScaleLevel1Fungus <- function(superScaleLevel1Fungus) {
if(is.na(superScaleLevel1Fungus) == TRUE) {
superScaleLevel1Fungus = 0
} else {
superScaleLevel1Fungus = superScaleLevel1Fungus
}
}
superScaleLevel1Fungus <- unlist(lapply(dd2$superScaleLevel1Fungus, superScaleLevel1Fungus))
superScaleLevel1Fungus
superScaleLevel2Fungus <- function(superScaleLevel2Fungus) {
if(is.na(superScaleLevel2Fungus) == TRUE) {
superScaleLevel2Fungus = 0
} else {
superScaleLevel2Fungus = superScaleLevel2Fungus
}
}
superScaleLevel2Fungus <- unlist(lapply(dd2$superScaleLevel2Fungus, superScaleLevel2Fungus))
superScaleLevel2Fungus
superScaleLevel3Fungus <- function(superScaleLevel3Fungus) {
if(is.na(superScaleLevel3Fungus) == TRUE) {
superScaleLevel3Fungus = 0
} else {
superScaleLevel3Fungus = superScaleLevel3Fungus
}
}
superScaleLevel3Fungus <- unlist(lapply(dd2$superScaleLevel3Fungus, superScaleLevel3Fungus))
superScaleLevel3Fungus
superScaleLevel4Fungus <- function(superScaleLevel4Fungus) {
if(is.na(superScaleLevel4Fungus) == TRUE) {
superScaleLevel4Fungus = 0
} else {
superScaleLevel4Fungus = superScaleLevel4Fungus
}
}
superScaleLevel4Fungus <- unlist(lapply(dd2$superScaleLevel4Fungus, superScaleLevel4Fungus))
superScaleLevel4Fungus
healthyscales <- function(
lowScaleZeroFungus, lowScaleLevel1Fungus, lowScaleLevel2Fungus, lowScaleLevel3Fungus, lowScaleLevel4Fungus,
mediumScaleZeroFungus, mediumScaleLevel1Fungus, mediumScaleLevel2Fungus, mediumScaleLevel3Fungus, mediumScaleLevel4Fungus,
highScaleZeroFungus, highScaleLevel1Fungus, highScaleLevel2Fungus, highScaleLevel3Fungus, highScaleLevel4Fungus,
superScaleZeroFungus, superScaleLevel1Fungus, superScaleLevel2Fungus, superScaleLevel3Fungus, superScaleLevel4Fungus
) {
lows = 3 * lowScaleZeroFungus + 3 * lowScaleLevel1Fungus * (1-0.125) + 3 * lowScaleLevel2Fungus * (1 - 0.375)+ 3 * lowScaleLevel3Fungus * (1 - 0.625) + 3 * lowScaleLevel4Fungus * (1 - 1)
mediums = 18.5 * mediumScaleZeroFungus + 18.5 * mediumScaleLevel1Fungus * (1-0.125) + 18.5 * mediumScaleLevel2Fungus * (1 - 0.375)+ 18.5 * mediumScaleLevel3Fungus * (1 - 0.625) + 18.5 * mediumScaleLevel4Fungus * (1 - 1)
highs = 55.5 * highScaleZeroFungus + 55.5 * highScaleLevel1Fungus * (1-0.125) + 55.5 * highScaleLevel2Fungus * (1 - 0.375)+ 55.5 * highScaleLevel3Fungus * (1 - 0.625) + 55.5 * highScaleLevel4Fungus * (1 - 1)
supers = 120 * superScaleZeroFungus + 120 * superScaleLevel1Fungus * (1-0.125) + 120 * superScaleLevel2Fungus * (1 - 0.375)+ 120 * superScaleLevel3Fungus * (1 - 0.625) + 120 * superScaleLevel4Fungus * (1 - 1)
allscales = lows + mediums + highs + supers
allscales
}
highhealthyscales <- mapply(
healthyscales,
lowScaleZeroFungus,
lowScaleLevel1Fungus,
lowScaleLevel2Fungus,
lowScaleLevel3Fungus,
lowScaleLevel4Fungus,
mediumScaleZeroFungus,
mediumScaleLevel1Fungus,
mediumScaleLevel2Fungus,
mediumScaleLevel3Fungus,
mediumScaleLevel4Fungus,
highScaleZeroFungus,
highScaleLevel1Fungus,
highScaleLevel2Fungus,
highScaleLevel3Fungus,
highScaleLevel4Fungus,
superScaleZeroFungus,
superScaleLevel1Fungus,
superScaleLevel2Fungus,
superScaleLevel3Fungus,
superScaleLevel4Fungus
)
highhealthyscales
dd2$highhealthyscales <- highhealthyscales
dd2$lowhealthyscales <- lowscales
dd2$highhealthyscales
scales_density <- scales %>% group_by(group) %>%
summarise(
sumhighscales = sum(highhealthyscales),
sumlowscales = sum(lowhealthyscales),
sumhealthyscales = sum(sumhighscales, sumlowscales)
)
scales_density <- data.frame(scales_density)
sub_dd <- data.frame(sub_dd)
sub_dd
scales_density <- scales %>% group_by(group) %>%
summarise(
sumhighscales = sum(highhealthyscales),
sumlowscales = sum(lowhealthyscales),
sumhealthyscales = sum(sumhighscales, sumlowscales)
)
scales_density <- dd2 %>% group_by(group) %>%
summarise(
sumhighscales = sum(highhealthyscales),
sumlowscales = sum(lowhealthyscales),
sumhealthyscales = sum(sumhighscales, sumlowscales)
)
scales_density <- data.frame(scales_density)
sub_dd <- data.frame(sub_dd)
sub_dd
head(sub_dd)
head(scales_density)
dd2 <- read.xls("REVICION GENERAL July 09..xls", sheet = 2)
head(dd2)
dim(dd2)
dd2 <- read.xls("REVICION GENERAL July 09..xls", sheet = 2)
head(dd2)
tail(dd2)
dd2[1,]
dd2[,1]
dd2[,2]
dim(dd2)
colnames(dd2) <- c("collectionDate", "collectionPlate", "treeSpecies", "areaName", "antNestClusterGroup", "coffeeBushNumber", "scaleLevel0", "scaleLevel50", "percentageHeloFungus", "lowScaleZeroFungus", "lowScaleLevel1Fungus", "lowScaleLevel2Fungus", "lowScaleLevel3Fungus", "lowScaleLevel4Fungus", "mediumScaleZeroFungus", "mediumScaleLevel1Fungus", "mediumScaleLevel2Fungus", "mediumScaleLevel3Fungus", "mediumScaleLevel4Fungus", "highScaleZeroFungus", "highScaleLevel1Fungus", "highScaleLevel2Fungus", "highScaleLevel3Fungus", "highScaleLevel4Fungus", "superScaleZeroFungus", "superScaleLevel1Fungus", "superScaleLevel2Fungus", "superScaleLevel3Fungus", "superScaleLevel4Fungus")
dd2$year <- "2009"
dd2$month <- "June-July"
head(dd2)
dim(dd2)
dd2 <- dd2[-c(1:2) , -c(30:34)]
head(dd2)
tail(dd2)
dim(dd2)
dd2[177,]
dd2 <- dd2[-c(177), ]
dim(dd2)
dd2$group <- groups
head(dd2)
fungus <- function(percentageHeloFungus) {
as.numeric(strsplit(as.character(percentageHeloFungus), "%")[[1]][1]) / 100
}
fungus()
fungus
percentageHeloFungus <- as.character(dd2$percentageHeloFungus)
percentageHeloFungus
percentageHeloFungus <- as.character(dd2$percentageHeloFungus)
percentageHeloFungus <- unlist(lapply(percentageHeloFungus, fungus))
percentageHeloFungus
which(percentageHelofFungus == "NA")
which(is.na(percentageHeloFungus) == TRUE)
percentageHeloFungus <- function(percentageHeloFungus) {
if(is.na(percentageHeloFungus) == TRUE) {
0
} else {
percentageHeloFungus
}
}
lowscales <- unlist(mapply(lowscale, zeroscales, fiftyscales, percentageHeloFungus))
fungus
percentageHeloFungus
fungus
percentageHeloFungus <- as.character(dd2$percentageHeloFungus)
percentageHeloFungus
fungus <- function(percentageHeloFungus) {
as.numeric(strsplit(as.character(percentageHeloFungus), "%")[[1]][1]) / 100
}
fungus
percentageHeloFungus <- unlist(lapply(percentageHeloFungus, fungus))
percentageHeloFungus
ptgHeloFungus <- function(percentageHeloFungus) {
if(is.na(percentageHeloFungus) == TRUE) {
0
} else {
percentageHeloFungus
}
}
ptgHeloFungus
ptgHeloFungus <- unlist(lapply(ptgHeloFungus, fungus))
ptgHeloFungus
ptgHeloFungus
ptgHeloFungus <- function(percentageHeloFungus) {
if(is.na(percentageHeloFungus) == TRUE) {
0
} else {
percentageHeloFungus
}
}
ptgHeloFungus_ <- unlist(lapply(ptgHeloFungus, fungus))
ptgHeloFungus_
fungus
ptgHeloFungus
percentageHeloFungus
ptgHeloFungus_ <- unlist(lapply(percentageHeloFungus, ptgHeloFungus))
ptgHeloFungus_
lowscale <- function(scaleLevel0, scaleLevel50, ptgHeloFungus_) {
if(is.na(scaleLevel0) == TRUE & is.na(scaleLevel50) == TRUE & is.na(ptgHeloFungus_) == FALSE) {
zeroscale = 0
fiftyscale = 0
(zeroscale + fiftyscale) * (1 - ptgHeloFungus_)
} else if(is.na(scaleLevel0) == FALSE & is.na(scaleLevel50) == TRUE & is.na(ptgHeloFungus_) == FALSE) {
zeroscale = 10
fiftyscale = 0
(zeroscale + fiftyscale) * (1 - ptgHeloFungus_)
} else if(is.na(scaleLevel0) == TRUE & is.na(scaleLevel50) == FALSE & is.na(ptgHeloFungus_) == FALSE) {
zeroscale = 0
fiftyscale = 35
(zeroscale + fiftyscale) * (1 - ptgHeloFungus_)
} else {
"NA"
}
}
lowscales <- unlist(mapply(lowscale, zeroscales, fiftyscales, ptgHeloFungus_))
lowscales
ptgHeloFungus
lowscale
fungus
percentageHeloFungus <- unlist(lapply(percentageHeloFungus, fungus))
percentageHeloFungus
ptgHeloFungus <- function(percentageHeloFungus) {
if(is.na(percentageHeloFungus) == TRUE) {
0
} else {
percentageHeloFungus
}
}
ptgHeloFungus_ <- unlist(lapply(percentageHeloFungus, ptgHeloFungus))
ptgHeloFungus_
lowscale <- function(scaleLevel0, scaleLevel50, ptgHeloFungus_) {
if(is.na(scaleLevel0) == TRUE & is.na(scaleLevel50) == TRUE & is.na(ptgHeloFungus_) == FALSE) {
zeroscale = 0
fiftyscale = 0
(zeroscale + fiftyscale) * (1 - ptgHeloFungus_)
} else if(is.na(scaleLevel0) == FALSE & is.na(scaleLevel50) == TRUE & is.na(ptgHeloFungus_) == FALSE) {
zeroscale = 10
fiftyscale = 0
(zeroscale + fiftyscale) * (1 - ptgHeloFungus_)
} else if(is.na(scaleLevel0) == TRUE & is.na(scaleLevel50) == FALSE & is.na(ptgHeloFungus_) == FALSE) {
zeroscale = 0
fiftyscale = 35
(zeroscale + fiftyscale) * (1 - ptgHeloFungus_)
} else {
"NA"
}
}
lowscales <- unlist(mapply(lowscale, zeroscales, fiftyscales, ptgHeloFungus_))
lowscales
zeroscales
fiftyscales
lowscale <- function(lowscale) {
if(lowscale == "NA") {
return(0)
} else {
return(lowscale)
}
}
lowscales <- unlist(mapply(lowscale, zeroscales, fiftyscales, ptgHeloFungus_))
lowscales
lowscales <- unlist(lapply(lowscales, lowscale))
lowscales <- as.numeric(lowscales)
lowscales
dd2$lowscale
dd2$zeroscale
zeroscales
dd2$scaleLevel0
dd2$scaleLEvel0 <- as.numeric(levels(dd2$scaleLevel0)[as.integer(dd$scaleLevel0)])
head(dd2$scaleLevel0)
dd2$scaleLevel0 <- as.numeric(levels(dd2$scaleLevel0)[as.integer(dd$scaleLevel0)])
head(dd2$scaleLevel0)
dd2$scaleLevel0 <- as.numeric(levels(dd2$scaleLevel0)[as.integer(dd2$scaleLevel0)])
head(dd2$scaleLevel0)
dd2$scaleLevel50 <- as.numeric(levels(dd2$scaleLevel50)[as.integer(dd2$scaleLevel50)])
head(dd2$scaleLevel50)
str_extract_all("this is 123 lines. 22 wods", "\\(?[0-9,.]+\\)?")
?str_extract_all
library(stringr)
?str_extract_all
str_extract_all("this is 123 lines. 22 wods", "\\(?[0-9,.]+\\)?")
str_extract_all("this is 123 lines. 22 wods", "\\(?[0-9]+\\)?")
str_extract_all("this is 123 lines. 22 wods", "\\(?[0-9]+\\)?")[[1]][1]
str_extract_all("this is 123 lines. 22 wods", "\\(?[0-9]+\\)?")[[1]][2]
str_extract_all("this is 123 lines. 22 ; wods", "\\(?[0-9,.,;]+\\)?")
strsplit("this is 123 lines.", "123")
strsplit("this is 123 lines.", " ")
strsplit("this is 123 lines.", "")
strsplit("this is 123 lines.", " ")
